clear;clc;
close all;

% 參數設定
max_iterations = 100;   % 最大迭代次數
tolerance = 1e-6;       % 終止條件的容忍度


% 參考法向量與距離
measuredNormal = roty(5) * rotx(3) * [0; 0; 1];  % 地面法向量 (參考)
measuredDistance = 0.1;        % 參考的地面距離
measurement = [measuredNormal; measuredDistance];

% 初始化位姿 (可以指定初始位姿，這裡用單位矩陣作為示例)
R_k = roty(10)*rotx(10); % 初始位姿
t_k = [10, 10, 3.5]';
pose = [R_k, t_k; 0, 0, 0, 1];

se3 = se3LieGroup2LieAlgebra(pose);

% 定義尺度因子
scale_translation = 1 / 10; % 將平移項縮放到 1/10 的大小
scale_rotation = 1; % 旋轉項保持不變

% 對平移和旋轉項分別進行標準化
se3_normalized = se3; % 初始化標準化後的向量
se3_normalized(1:3) = se3(1:3) * scale_translation; % 平移項縮放
se3_normalized(4:6) = se3(4:6) * scale_rotation;    % 旋轉項保持不變

for iter = 1:max_iterations
    
    
    H = compute_jacobian(se3_normalized, measurement);

    r = compute_residual(se3_normalized, measurement);
   

    % Gauss-Newton 步驟
    delta_pose = -(H' * H) \ (H' * r);



    % 更新位姿
    se3_normalized(3:6) = se3_normalized(3:6) + delta_pose;

    % 檢查終止條件
    if norm(delta_pose) < tolerance
        disp(['迭代結束於步驟：', num2str(iter)]);
        break;
    end
end

% 逆標準化
se3_unnormalized = se3_normalized;
se3_unnormalized(1:3) = se3_normalized(1:3) / scale_translation; % 恢復平移項
se3_unnormalized(4:6) = se3_normalized(4:6) / scale_rotation;    % 恢復旋轉項

disp('優化後的位姿：');
disp(se3);


